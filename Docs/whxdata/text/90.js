rh._.exports({"0":["Web API Rest Action"],"1":["\n  ","\n  "," ","\n  ","1. Introduction","\n           Web API SOAP & Web API REST Actions support the following features:","\n           • Security – ability to use certificates provided by user","\n           • Authorization - currently added Basic authorization method using username and password.","\n  ","2. Agent Configuration ","\n           2.1. Create new agent and select platform and driver as WebService.","\n                  Go to Configurations-> Agents and click on the + button.","\n                  ","\n                In the Agent Wizard, enter the Name and select ‘WebServices’ in the Platform type.","\n                    ","\n  ","    ","\n           2.2. Configure relevant fields:","\n                  SaveRequestXML, SaveResponseXML – setting to true will save the request files being sent and received responses","\n                  SaveXMLDirectoryPath – The path where all requests and response will be saved","\n                     ","                  ","\n  ","\n           2.3. Test Agent – click on ‘Test Agent Configurations’ button to make sure all the settings are correct.","\n                  Make sure connection is successful:","\n  ","           ","\n  "," ","\n  ","3. Configuration","\n              3.1. Go To ‘Add Action’ screen and select ‘WebAPI REST Action’ and click ‘Add Action’","\n                    ","\n  ","        3.2. Action Type configurations:","\n                  In the screenshot below you can see the required fields","\n                  a)    Endpoint URL – this is the ‘end point ‘ URL where the request is being sent (same as in SOAP UI)","\n                  b)    In the event that custom network credentials are required to access the endpoint URL (for example Username = sa , Password=sa) , ","\n  ","                   a radio button  can be marked as ‘Custom’ and then 3 additional fields will be visible allowing the user to populate : ","\n  ","                   username, password and domain ","\n                  c)    ‘Do not Fail Action on Bad Response’ - when checkbox is marked no validation will be done on the response code (useful for negative testing).","\n                  d)    ‘Request Headers’ – by clicking on the ‘+’ sign (#6) the user can add a field which is required in the request e.g. token , ","\n  ","                   in the case of adding a token the values should be as follows:","\n                            i.  Header = ‘Token’ (or as required per specifications).","\n                            ii. Value   =  the token value .","\n                  e)    Request Type : populate request type per requirement ","\n                       **Note: GET/DELETE Requests do not require request body","\n                        ","\n  ","\n                  f)    HTTP Version – http protocol version (mostly used Version 1.1):","\n                         ","\n  ","\n                  g)    Response content Type – encoding of the response the user expects to receive:","\n                         ","\n  ","\n                  h)    Cookie Mode:","\n                         i.   Don’t use cookies – the platform will not record nor send cookies.","\n                         ii.     Use Fresh Cookies – the platform will retrieve the cookies from the response and store them, for example storing the cookies from a login step.","\n                         iii. Use Session Cookies – will use previously stored cookies, for example if a login step is required then the cookies ","\n  ","                      retrieved from the login step will be used ","\n                              ","\n  ","                         ","\n  ","                From any ‘…’ the user can reach the value expression editor screen and parameterize the inputs:","\n  ","                      ","\n  ","\n              3.3. Request Body:","\n                     In this section the user can define the body of the message ","\n                        i.     Radio button selecting input type: free text or from file.","\n                               **Note file types are : json, xml,txt.","\n                        ii.  Body content Parameters – ability to replace keys with values per definition","\n                        iii. Body content Type – request encoding ","\n  ","\n  ","                        ","\n  ","                        ","\n  ","\n              ","     1.    Security Configurations:","\n                           This section allows the user to configure security settings:","\n                             ","\n                      a.    SSL Certificates : ","\n                             This area allows to add a custom SSL certificate to the request, as default the platform Accepts all Certificates,","\n                             When ‘Custom’ radio button is selected 2 fields become visible, Certificate Path & Certificate Password ( not mandatory) ","\n  ","                       and the user can browse for the certificate or pass it’s path in a variable.","\n  ","                          ","\n  ","                b.    Security Type – as mentioned in the introduction the user can select the security protocol per system requirements ","\n  ","                        from a drop down list","\n  ","                         ","\n  ","                c.    Authorization – allows to use different authorization methods:","\n                             ","\n  ","                        ","\n  ","\n  ","\n                      Output Section","\n                      If the actions successful the output values will be populate with the","\n  ","                  ","Response code, headers, full response , parsed response per fields.","\n  ","                   ","\n  ","                   ","\n                      ","\n\n"],"2":["Web API Rest Action"],"id":"90"})