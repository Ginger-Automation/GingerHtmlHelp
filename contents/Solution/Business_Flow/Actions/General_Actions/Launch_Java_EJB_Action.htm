<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <title>Launch Java EJB Action</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
</head>
<body>
  <h1>Launch Java EJB Action</h1>
  <p><span style="font-size:17px;"><strong><span style="font-size:20px;">How to Configure Action</span></strong><br />
       <strong>   1. Pre-requisite </strong><br />
             A Solution should be created.<br />
             To run EJB using Ginger, we need to have Java installed along with the EJB information such as <br />
              - EJB Classes<br />
              - Initial Context Factory<br />
              - Provider URL<br />
              - Lookup Interface<br />
              - EJB Home<br />
              - EJB Class</span></p>
  <p><span style="font-size:17px;">                          <br />
      <strong>    2. Action Operation</strong><br />
                            <br />
            1) Go to Automate tab. In the Activity Actions, click on ‘Add New’ button<br />
                    <img src="../../../../assets/images/image867.png" /> </span></p>
  <p><span style="font-size:17px;"><br />
            2) Go to the ‘General Actions’ tab and select the ‘Launch Java EJB’ action then click on ‘Add Action’ button given in the below window                <img src="../../../../assets/images/image868.png" />  </span></p>
  <p><span style="font-size:17px;">      3) Below screen should be displayed.  </span></p>
  <p><span style="font-size:17px;">          EJB Properties:-<br />
                  <img src="../../../../assets/images/image869.png" /></span></p>
  <p><span style="font-size:17px;">         Actions List:-<br />
                 In the Actions list, you need to define the flow how the EJB is used. We have four methods that will help to create the ations list: </span></p>
  <p><span style="font-size:17px;">            1.    EJB_Create -&gt; Used to create an EJB Object <br />
                  2.    CreateObject -&gt; Need to provide the class name and variable name to save the object<br />
                  3.    CallMethod -&gt;Need to mention on what variable we are calling the method, the name of the method, parameter list and incase if                     </span><span style="font-size:17px;">the method is returning an object, provide the variable name to capture it<br />
                  4.    SaveToXML -&gt; Saves the output of a variable to an XML file at a user defined location </span></p>
  <p><span style="font-size:17px;">            <strong>Example of Actions List: </strong></span></p>
  <p><span style="font-size:17px;">           EJB_Create(storeAs=ejb)<br />
                 CreateObject(className=amdocs.oms.omsinterface.GetOrderDetailsRequest,storeAs=A)<br />
                 CallMethod(variable=A,methodName=setorderID,params=[{Var Name=OrderID}])<br />
                 CreateObject(className=amdocs.oms.omscontext.Context,storeAs=B)<br />
                 CallMethod(variable=B,methodName=setlanguage,params=[EN])<br />
                 CallMethod(variable=ejb,methodName=getOrderDetails,params=[$A;$B],storeAs=C)<br />
                 SaveToXML(variable=C,fileName=c:\temp\test.xml)</span></p>
</body>
</html>